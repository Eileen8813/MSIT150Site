
@{
    ViewData["Title"] = "homework2";
}

<h1>作業二</h1>

<div class="card" style="width: 18rem;">
   @* <img src="..." class="card-img-top" alt="...">*@
    <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
</div>
@section Styles{

}

@section Scripts{
    <script>
        //作業二 引用 datas/Travel.js 中的JSON，讀取資料後，透過 bootstrap cards component 顯示在網頁上

        //步驟一
        const xhr = new XMLHttpRequest();

       
            //myDiv.innerHTML = "Button Click"  這是練習一不用管

            //步驟二對伺服器發出要求(Request)
            xhr.open('Get', '/datas/travel.js');
            xhr.send();

            //步驟三接收伺服器回傳的資料

            //這邊的Load不能改寫成簡短的!!因為xhr(XMLHttpRequest)是沒有load這個方法!
            xhr.addEventListener('load', () => {
                const data = xhr.responseText;
            console.log(data.spots['CommonFormat']);
                //步驟四讀資料 JSON XML
            const jsonData = JSON.parse(data);
            const dataspots=jsonData.spots;

            const card = dataspots.map((dataspot)=> {
            const { RowNumber, REF_WP, CAT1, CAT2, SERIAL_NO, MEMO_TIME, stitle, xbody, avBegin, avEnd, idpt, address,
                xpostDate, img, langinfo, POI, info, longitude, latitude, MRT } = spot;
                return (
                    ` <tr>
                                 <td>${stitle}</td>
                       
                    </tr>
                    `)

            });
                //步驟五顯示資料
            $('#div1').html(card.join(''));
            })





       
    </script>
}